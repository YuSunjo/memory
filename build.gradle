plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'jacoco'
}

repositories {
    mavenCentral()
}

bootJar {enabled = false}
jar {enabled = true}

tasks.register('jacocoRootReport', JacocoReport) {
    description = 'Generates an aggregate report from all subprojects'
    group = 'reporting'
    
    subprojects { subproject ->
        subproject.plugins.withType(JacocoPlugin) {
            dependsOn subproject.test
            
            sourceDirectories.from += subproject.sourceSets.main.allSource.srcDirs
            classDirectories.from += subproject.sourceSets.main.output
            executionData.from += subproject.jacocoTestReport.executionData
        }
    }
    
    reports {
        html.required = true
        xml.required = true
        csv.required = false
    }
    
    doFirst {
        executionData = files(executionData.findAll { it.exists() })
    }
}

allprojects {
    group = 'com'
    version = '0.0.1-SNAPSHOT'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'jacoco'

    repositories {
        mavenCentral()
    }
    
    java {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-aop'  // AOP 의존성 추가
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testCompileOnly 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'
    }

    jacoco {
        toolVersion = "0.8.10"
    }

    jacocoTestReport {
        dependsOn test, compileJava, processResources
        reports {
            xml.required = true
            html.required = true
            csv.required = false
        }
        
        afterEvaluate {
            classDirectories.setFrom(files(classDirectories.files.collect {
                fileTree(dir: it, exclude: [
                    '**/config/**',
                    '**/dto/**',
                    '**/entity/**',
                    '**/domain/**',
                    '**/*Application*',
                    '**/*Config*',
                    '**/*Exception*'
                ])
            }))
        }
    }

    jacocoTestCoverageVerification {
        dependsOn jacocoTestReport
        
        violationRules {
            rule {
                limit {
                    minimum = 0.70
                }
            }
        }
    }

    test {
        useJUnitPlatform()
        finalizedBy jacocoTestReport
    }
}