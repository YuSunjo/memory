version: '3.8'

services:
  postgres:
    image: postgis/postgis:15-3.3
    container_name: memory-postgres-prod
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./data/postgres-data:/var/lib/postgresql/data
    networks:
      - memory-network
    restart: always
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G

  redis:
    image: redis:6.2
    container_name: memory-redis-prod
    ports:
      - "6379:6379"
    networks:
      - memory-network
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD}
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

  app:
    build:
      context: ../../..
      dockerfile: memory-infra/docker/Dockerfile
    container_name: memory-app-prod
    depends_on:
      - postgres
      - redis
    ports:
      - "80:8080"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.spatial.dialect.postgis.PostgisPG95Dialect
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_REDIS_PASSWORD: ${REDIS_PASSWORD}
    networks:
      - memory-network
    restart: always
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G

networks:
  memory-network:
    driver: bridge

volumes:
  postgres-data:
