version: '3.8'

services:
  elasticsearch:
    build:
      context: .
      dockerfile: Dockerfile_Elastic
    container_name: memory-elasticsearch-prod
    ports:
      - "9250:9200"
      - "9350:9300"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
      - bootstrap.memory_lock=true
    volumes:
      - ./data/elasticsearch-data:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    networks:
      - memory-network-prod
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health -u elastic:${ELASTIC_PASSWORD} --connect-timeout 10 --max-time 10 || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 10
      start_period: 60s

  kibana:
    image: docker.elastic.co/kibana/kibana:8.17.4
    container_name: memory-kibana-prod
    ports:
      - "5651:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
      - xpack.security.enabled=true
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - memory-network-prod
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5601/api/status -u kibana_system:${KIBANA_PASSWORD} || curl -f http://localhost:5601/api/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
  app:
    image: 228749872437.dkr.ecr.ap-northeast-2.amazonaws.com/my_memory/memory:latest
    container_name: my-memory
    depends_on:
      elasticsearch:
        condition: service_healthy
    ports:
      - "8080:8080"
    deploy:
      resources:
        limits:
          memory: 10G
        reservations:
          memory: 2G
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: ${DB_URL}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      CLOUD_AWS_CREDENTIALS_ACCESS-KEY: ${AWS_S3_ACCESS_KEY}
      CLOUD_AWS_CREDENTIALS_SECRET-KEY: ${AWS_S3_SECRET_KEY}
      CLOUD_AWS_S3_BUCKET: ${AWS_S3_BUCKET}
      CLOUD_AWS_REGION_STATIC: ${AWS_S3_REGION}
      CLOUD_AWS_S3_ENDPOINT: ${AWS_S3_ENDPOINT}
      JWT_TOKEN_SECRET: ${JWT_TOKEN_SECRET}
      SPRING_ELASTICSEARCH_URIS: ${ELASTIC_URIS}
      SPRING_ELASTICSEARCH_USERNAME: elastic
      SPRING_ELASTICSEARCH_PASSWORD: ${ELASTIC_PASSWORD}
      JAVA_OPTS: "-Xms2g -Xmx8g -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:+UseStringDeduplication -XX:G1HeapRegionSize=16m"
    networks:
      - memory-network-prod
    restart: always

  prometheus:
    image: prom/prometheus
    container_name: memory-prometheus-prod
    user: "root"
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/alert_rules.yml:/etc/prometheus/alert_rules.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=720h'
      - '--web.enable-lifecycle'
    networks:
      - memory-network-prod
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  grafana:
    image: grafana/grafana
    container_name: memory-grafana-prod
    user: "root"
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SECURITY_ALLOW_EMBEDDING=false
      - GF_SECURITY_COOKIE_SECURE=true
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - memory-network-prod
    restart: always
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
networks:
  memory-network-prod:
    driver: bridge

volumes:
  elasticsearch-data:
  prometheus-data:
  grafana-data:
